type Meal {
    id: String!
    creatorId: String!
    title: String!
    description: String
    ingredients: [MealIngredient]!
}

type MealIngredient {
    id: String!
    ingredientId: String!
    amount: Float!
    name: String!
    unit: Unit!
}

type Query {
    mealById(id: String!): Meal
    mealsByCreatorId(id: String!): [Meal]
    mealsByHomeId(homeId: String!): [Meal]
}

input CreateMealIngredientInput {
    id: String!
    mealId: String!
    ingredientId: String!
    amount: Float!
    name: String!
    unit: UnitInput!
}

input CreateOrUpdateMealInput {
    id: String!
    creatorId: String!
    title: String!
    description: String
    createMealIngredients: [CreateMealIngredientInput]
}

type Mutation {
    createOrUpdateMeal(createOrUpdateMeal: CreateOrUpdateMealInput!): Boolean
}

input AddMealIngredientInput {
    mealId: String!
    mealIngredientId: String!
    ingredientId: String!
    amount: Float!
    name: String!
    ingredientUnit: IngredientUnitInput!
}

input IngredientUnitInput {
    value: String!
}

type Mutation {
    addMealIngredient(addMealIngredient: AddMealIngredientInput!): Boolean
}
